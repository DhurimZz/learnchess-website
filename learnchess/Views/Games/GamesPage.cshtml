@using ContosoUniversity
@model PaginatedList<Games>

@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewData["Title"] = "Games Page";
}

<head>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
</head>

<body class="bg-secondary">
	<h1 class="text-light">Chess Games</h1>
	<form asp-action="GamesPage" method="get">
		<div class="d-flex">
			<div class="form-actions no-color me-2">
				<p>
					Find by title: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
				</p>
			</div>
			<div class="form-actions no-color me-2">
				<select class="form-control">
					<option value="">-- Select an author --</option>
					@if (ViewBag.Authors != null)
					{
						foreach (var author in ViewBag.Authors)
						{
							<option value="@author.AuthorId">@author.Name</option>
						}
					}
				</select>
			</div>
			<div class="me-2">
				<input type="submit" value="Search" class="btn btn-success" /> |
				<a asp-action="GamePage" class="btn-link btn">Back to Full List</a>
			</div>
		</div>
	</form>
	<div class="row row-cols-1 row-cols-md-3 g-4">
		@foreach (var Games in Model)
		{
			<div class="col">
				<div class="card">
					@if (Games.Thumbnail != null)
					{
						<div class="card">
							<img id="photo" class="card-img-top" alt="..." style="object-fit:cover; height:21rem;width:100%;" src="data:image/*;base64,@(Convert.ToBase64String(Games.Thumbnail))">
						</div>
					}

					<div class="card-body">
						<h5 class="card-title text-black">@Html.DisplayFor(modelItem => Games.Title)</h5>
						<a class="btn btn-info" href="@Html.DisplayFor(modelItem => Games.Url)"><i class="fas fa-play me-2"></i>See The Full Game</a>
					</div>
				</div>
			</div>
		}
	</div>
</body>
@{
	var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
	var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="mt-3 d-flex mb-3">
	<div class="me-2">
		<a asp-action="ArticlePage"
		   asp-route-sortOrder="@ViewData["CurrentSort"]"
		   asp-route-pageNumber="@(Model.PageIndex - 1)"
		   asp-route-currentFilter="@ViewData["CurrentFilter"]"
		   class="btn btn-primary @prevDisabled">
			Previous
		</a>
	</div>
	<div>
		<a asp-action="ArticlePage"
		   asp-route-sortOrder="@ViewData["CurrentSort"]"
		   asp-route-pageNumber="@(Model.PageIndex + 1)"
		   asp-route-currentFilter="@ViewData["CurrentFilter"]"
		   class="btn btn-primary @nextDisabled">
			Next
		</a>
	</div>
</div>